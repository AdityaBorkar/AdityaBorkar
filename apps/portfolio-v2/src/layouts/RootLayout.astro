---
import { ClientRouter } from "astro:transitions";
import type { Thing, WithContext } from "schema-dts";
import CookiePopup from "@/components/CookiePopup.astro";
import Posthog from "@/components/Posthog.astro";
import { JsonLd } from "@/lib/jsonLd";
import "./global.css";
import { Font } from "astro:assets";

interface Props {
    title: string;
    description: string;
    keywords: string[];
    open_graph: Record<string, string>;
    schema_markup?: Promise<WithContext<Thing>>[] | WithContext<Thing>[];
}

const {
    title,
    description,
    keywords,
    // open_graph = {},
    schema_markup = [],
} = Astro.props;

export const partial = true;
---

<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <meta http-equiv="Accept-CH" content="Width, Downlink, Sec-CH-UA" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link rel="sitemap" href="/sitemap-index.xml" />
        <!--
        themeColor	false	"#000000"	Browser theme color.
        colorScheme	false	"light"	Preferred color scheme.
        -->
        <title>{title}</title>
        <meta name="description" content={description} />
        <meta name="keywords" content={keywords?.join(", ")} />
        <script
            type="application/ld+json"
            set:html={(await Promise.all(schema_markup)).map(JsonLd).join("\n")}
            is:inline
        />
        <!-- Open Graph -->
        <!--
        facebook.image	false	"/facebook.png"	Facebook share image.
        facebook.url	false	"https://astro.build"	Page URL.
        facebook.type	false	"website"	Type of resource. See all types here.
        twitter.image	false	"/twitter.png"	Twitter share image.
        twitter.site	false	"@"	Twitter handle of publishing site.
        twitter.card	false	"summary"	Format of Twitter share card. See all types here.
        -->
        <ClientRouter />
        <Font cssVariable="--font-lora" preload />
        <Font cssVariable="--font-inter" preload />
        <script data-astro-rerun type="module" is:inline>
            const doc = document.documentElement;
            window
                .matchMedia("(prefers-color-scheme: dark)")
                .addEventListener("change", (event) => {
                    const isDark = event.matches;
                    doc.classList.toggle("dark", isDark);
                    window.localStorage.setItem(
                        "theme",
                        isDark ? "dark" : "light",
                    );
                });

            const theme =
                window.localStorage.getItem("theme") ||
                (window.matchMedia("(prefers-color-scheme: dark)").matches
                    ? "dark"
                    : "light");
            doc.classList.toggle(theme);

            document.body.style.visibility = "visible";
            document.body.style.opacity = "1";
        </script>
    </head>
    <body
        class="text-sm font-normal leading-normal antialiased relative min-h-screen cursor-default bg-background text-text-secondary font-sans-serif"
        style="text-rendering: optimizeLegibility; -webkit-text-size-adjust: 100%; scroll-behavior: smooth;"
    >
        <slot />

        <CookiePopup />

        <script>
            import Lenis from "lenis";
            new Lenis({ autoRaf: true, lerp: 0.06 });
        </script>

        {process.env.NODE_ENV !== "development" && <Posthog />}
    </body>
</html>
