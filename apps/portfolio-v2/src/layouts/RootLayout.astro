---
import type { Thing, WithContext } from "schema-dts";

import { ClientRouter } from "astro:transitions";

import Posthog from "@/components/Posthog.astro";
import VercelToolbar from "@/components/VercelToolbar.astro";
import CookiePopup from "@/components/CookiePopup.astro";
import { JsonLd } from "@/lib/jsonLd";
import "./global.css";

interface Props {
    title: string;
    description: string;
    keywords: string[];
    schemaMarkup?: WithContext<Thing>[];
}

const { title, description, keywords, schemaMarkup = [] } = Astro.props;
---

<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <meta http-equiv="Accept-CH" content="Width, Downlink, Sec-CH-UA" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <!--
        themeColor	false	"#000000"	Browser theme color.
        colorScheme	false	"light"	Preferred color scheme.
        -->
        <title>{title}</title>
        <meta name="description" content={description} />
        <meta name="keywords" content={keywords?.join(", ")} />
        <script
            type="application/ld+json"
            set:html={schemaMarkup.map(JsonLd).join("\n")}
        />
        <!-- Open Graph -->
        <!--
        facebook.image	false	"/facebook.png"	Facebook share image.
        facebook.url	false	"https://astro.build"	Page URL.
        facebook.type	false	"website"	Type of resource. See all types here.
        twitter.image	false	"/twitter.png"	Twitter share image.
        twitter.site	false	"@astrodotbuild"	Twitter handle of publishing site.
        twitter.card	false	"summary"	Format of Twitter share card. See all types here.
        -->
        <ClientRouter />
        <script data-astro-rerun type="module" is:inline>
            const doc = document.documentElement;
            window
                .matchMedia("(prefers-color-scheme: dark)")
                .addEventListener("change", (event) => {
                    const isDark = event.matches;
                    doc.classList.toggle("dark", isDark);
                    window.localStorage.setItem(
                        "theme",
                        isDark ? "dark" : "light",
                    );
                });

            const theme =
                window.localStorage.getItem("theme") ||
                (window.matchMedia("(prefers-color-scheme: dark)").matches
                    ? "dark"
                    : "light");
            doc.classList.toggle(theme);

            document.body.style.visibility = "visible";
            document.body.style.opacity = "1";
        </script>
    </head>
    <body
        class="text-sm leading-normal antialiased relative min-h-screen cursor-default bg-background text-text-secondary"
    >
        <!-- transition:animate="slide" -->
        <!--
        'before:absolute before:left-0 before:top-0 before:-z-10 before:h-full before:w-full',
        'before:[background-image:radial-gradient(#cbd5e1,_transparent_3px)] before:[background-size:25px_25px]',
        -->
        <slot />

        <CookiePopup />

        <script>
            import Lenis from "lenis";
            new Lenis({ autoRaf: true, lerp: 0.06 });

            // TODO: Add Squircle CSS Worklet
            // import 'css-paint-polyfill'
            // import workletURL from "url-loader!<package-name>/worklet.js";
            // const workletURL = ''
            // CSS.paintWorklet.addModule(workletURL)
        </script>

        {process.env.NODE_ENV !== "development" && <Posthog />}
        {process.env.NODE_ENV === "development" && <VercelToolbar />}
    </body>
</html>
