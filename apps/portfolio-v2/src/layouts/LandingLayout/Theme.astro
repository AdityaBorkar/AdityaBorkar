---
import MoonIcon from "@/assets/icons/Moon.svg";
import SunIcon from "@/assets/icons/Sun.svg";

interface Props {
    class?: string;
}

const props = Astro.props;
---

<button
    type="button"
    data-theme="toggle"
    class:list={[
        props.class,
        "p-2 text-text-secondary border border-border/20 bg-bg-primary transition-colors duration-300 rounded-full",
        "hover:bg-bg-secondary focus:bg-bg-secondary focus:ring-2 focus:ring-text-secondary",
    ]}
>
    <MoonIcon class="hidden dark:block size-4" />
    <SunIcon class="dark:hidden size-4" />
</button>

<script>
    // Switch CalMeetButton Theme
    function switchCalMeetButtonTheme(isDark: boolean) {
        const calMeetButton = document.querySelectorAll("[data-cal-config]");
        calMeetButton.forEach((button) => {
            const configText = button.getAttribute("data-cal-config");
            if (!configText) return;
            const config = JSON.parse(configText);
            config.theme = isDark ? "dark" : "light";
            button.setAttribute("data-cal-config", JSON.stringify(config));
        });
    }

    switchCalMeetButtonTheme(isDarkMode());

    function isDarkMode() {
        return document.documentElement.classList.contains("dark");
    }

    document.querySelectorAll("[data-theme='toggle']").forEach((element) => {
        element.addEventListener("click", () => {
            const isDark = !isDarkMode();
            window.localStorage.setItem("theme", isDark ? "dark" : "light");

            const switchTheme = () => {
                document.documentElement.classList.toggle("dark", isDark);
                switchCalMeetButtonTheme(isDark);
            };
            if (!document.startViewTransition) switchTheme();
            document.startViewTransition(switchTheme);
        });
    });
</script>
