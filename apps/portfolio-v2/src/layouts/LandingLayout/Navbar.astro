---
import MenuIcon from '@/assets/icons/Menu.svg';

const NavItems = [
	{ link: '/', label: 'Home' },
	{ link: '/about', label: 'About' },
	{ link: '/services', label: 'Services' },
	{ link: '/projects', label: 'Projects' },
	// { link: "/blog", label: "Blog" },
	{ link: '/contact', label: 'Contact' },
];

const path = '';

// TODO: Hide Navbar on scroll
---

<!-- TODO: Animate Header only on Theme Change -->
<header
    transition:persist
    transition:animate="none"
    class:list={[
        "w-[80vw] max-w-[54rem] sticky top-4 z-50 mx-auto flex select-none flex-row mt-4  justify-between rounded-full border border-border/10 px-2 bg-bg-primary/50 shadow-bg-tertiary/10 shadow-md backdrop-blur-xl",
        "md:top-8   md:w-[85vw]",
    ]}
>
    <a
        href="/"
        class="my-2 font-bold flex flex-row items-center text-text-primary"
    >
        <div
            class="inline-block rounded-full border-2 border-border px-2 py-0 text-xl tracking-wider"
        >
            A/B
        </div>
        <div class="ml-2 inline-block align-bottom text-2xl">Adi.</div>
    </a>

    <!-- TODO: Dynamic Island Effect -->

    <MenuIcon class="mr-2 mt-3 block size-6 md:hidden" />
    <nav
        class="fixed -left-14 hidden -top-8 flex h-screen w-screen flex-col items-center justify-around bg-bg-primary md:hidden lg:gap-2"
    >
        <div class="flex flex-col my-[20%] justify-between items-center gap-4">
            {
                NavItems.map(({ link, label }) => (
                    <a
                        href={link}
                        class:list={[
                            "relative h-fit cursor-pointer rounded-full px-4 py-1 text-sm font-medium text-text-secondary hover:text-text-primary",
                            path === link && "text-text-primary",
                            // path === link &&
                            //   "after:bg-bg-secondary after:absolute after:-bottom-1 after:left-[37.5%] after:h-2 after:w-1/4 after:rounded-md after:bg-amber-500 after:blur after:dark:bg-amber-800",
                            path === link &&
                                "before:absolute before:-bottom-2.5 before:left-[10%] before:w-4/5 before:rounded-[4px] before:border-b before:border-amber-600",
                        ]}
                    >
                        {label}
                    </a>
                ))
            }
        </div>
    </nav>

    <nav class="relative z-20 hidden flex-row items-center md:flex lg:gap-2">
        <!--
onMouseLeave={() => {
if (!ShadowRef.current) return;
ShadowRef.current.style.right = "-20rem";
ShadowRef.current.style.opacity = "0";
}}
-->
        <div
            data-header-shadow
            class="absolute right-0 top-2 -z-10 h-8 w-20 rounded-full bg-bg-primary opacity-0 duration-300"
        >
        </div>
        {
            NavItems.map(({ link, label }) => (
                <a
                    data-header-link
                    href={link}
                    class:list={[
                        "relative h-fit cursor-pointer rounded-full px-4 py-1 text-sm font-medium text-text-secondary hover:text-text-primary",
                        // path === link &&
                        //   'after:bg-bg-secondary after:absolute after:-bottom-1 after:left-[37.5%] after:h-2 after:w-1/4 after:rounded-md after:bg-amber-500 after:blur after:dark:bg-amber-800',
                        path === link && "text-text-primary",
                        path === link &&
                            "before:absolute before:-bottom-2.5 before:left-[10%] before:w-4/5 before:rounded-[4px] before:border-b before:border-amber-600",
                    ]}
                >
                    {label}
                </a>
            ))
        }
        <script>
            const ShadowRef = document.querySelector(
                "[data-header-shadow]",
            ) as HTMLElement;
            document
                .querySelectorAll("[data-header-link]")
                .forEach((element) => {
                    element.addEventListener("mouseover", (e) => {
                        const target = e.target as HTMLElement;
                        if (!ShadowRef) return;
                        ShadowRef.style.opacity = "1";
                        ShadowRef.style.left = `${target.offsetLeft}px`;
                        ShadowRef.style.width = `${target.offsetWidth}px`;
                    });
                });
        </script>
    </nav>

    <Theme />
</header>
