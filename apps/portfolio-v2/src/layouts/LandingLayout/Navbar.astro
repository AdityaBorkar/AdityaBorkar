---
import MenuIcon from "@/assets/icons/Menu.svg";
import Theme from "./Theme.astro";

const NavItems = [
    { link: "/", label: "Home" },
    { link: "/about", label: "About" },
    { link: "/services", label: "Services" },
    { link: "/projects", label: "Projects" },
    // { link: "/blog", label: "Blog" },
    { link: "/contact", label: "Contact" },
];

const path = "";

// TODO: Hide Navbar on scroll
// TODO: Animate Header only on Theme Change
// Disable transition:persist for THEME TOGGLE
---

<header
    id="primary-header"
    data-open=""
    class:list={[
        "group/header rounded-3xl w-[80vw] max-w-[54rem] fixed left-[10vw] top-4 z-50 mx-auto select-none mt-4 border border-border/10 px-2 bg-bg-primary/50 shadow-bg-tertiary/10 shadow-md backdrop-blur-3xl",
        "md:top-8 md:w-[85vw]",
    ]}
    transition:persist
    transition:animate="none"
>
    <div class="flex flex-row items-center justify-between">
        <a
            href="/"
            class="my-2 font-bold flex flex-row items-center text-text-primary"
        >
            <div
                class="inline-block rounded-full border-2 border-border px-2 py-0 text-xl tracking-wider"
            >
                A/B
            </div>
            <div class="ml-2 inline-block align-bottom text-2xl">Adi.</div>
        </a>

        <!-- TODO: Dynamic Island Effect -->

        <div class="flex flex-row items-center gap-2">
            <Theme class:list={["md:absolute md:-right-14 md:top-1.5", ""]} />
            <MenuIcon
                class="mr-2 block size-6 md:hidden"
                data-toggle-element="#primary-header"
            />
        </div>

        <nav
            class="relative z-20 hidden flex-row items-center md:flex lg:gap-2"
            id="header-nav-wrapper"
        >
            <div
                data-header-shadow
                class="absolute right-0 -top-1 -z-10 h-9 w-20 rounded-full bg-bg-primary opacity-0 duration-300"
            >
            </div>
            {
                NavItems.map(({ link, label }) => (
                    <a
                        data-header-link
                        href={link}
                        class:list={[
                            "relative h-fit cursor-pointer rounded-full px-4 py-1 text-sm font-medium text-text-secondary hover:text-text-primary",
                            // path === link &&
                            //   'after:bg-bg-secondary after:absolute after:-bottom-1 after:left-[37.5%] after:h-2 after:w-1/4 after:rounded-md after:bg-amber-500 after:blur after:dark:bg-amber-800',
                            path === link && "text-text-primary",
                            path === link &&
                                "before:absolute before:-bottom-2.5 before:left-[10%] before:w-4/5 before:rounded-[4px] before:border-b before:border-amber-600",
                        ]}
                    >
                        {label}
                    </a>
                ))
            }
            <script>
                const ShadowRef = document.querySelector(
                    "[data-header-shadow]",
                ) as HTMLElement;
                document
                    .querySelectorAll("[data-header-link]")
                    .forEach((element) => {
                        element.addEventListener("mouseover", (e) => {
                            const target = e.target as HTMLElement;
                            if (!ShadowRef) return;
                            ShadowRef.style.opacity = "1";
                            ShadowRef.style.left = `${target.offsetLeft}px`;
                            ShadowRef.style.width = `${target.offsetWidth}px`;
                        });
                    });
                document
                    .querySelector("#header-nav-wrapper")
                    ?.addEventListener("mouseleave", () => {
                        if (!ShadowRef) return;
                        ShadowRef.style.right = "-20rem";
                        ShadowRef.style.opacity = "0";
                        // TODO: Reset to selected route
                    });
            </script>
        </nav>
    </div>

    <nav
        class:list={[
            "hidden group-data-[open=true]/header:flex flex-col items-center justify-around",
            "md:hidden lg:gap-2",
        ]}
    >
        <div class="flex flex-col my-[20%] justify-between items-center gap-4">
            {
                NavItems.map(({ link, label }) => (
                    <a
                        href={link}
                        class:list={[
                            "relative h-fit cursor-pointer rounded-full px-4 py-1 font-medium text-text-secondary hover:text-text-primary",
                            path === link && "text-text-primary",
                            // path === link &&
                            //   "after:bg-bg-secondary after:absolute after:-bottom-1 after:left-[37.5%] after:h-2 after:w-1/4 after:rounded-md after:bg-amber-500 after:blur after:dark:bg-amber-800",
                            path === link &&
                                "before:absolute before:-bottom-2.5 before:left-[10%] before:w-4/5 before:rounded-[4px] before:border-b before:border-amber-600",
                            "text-lg",
                        ]}
                    >
                        {label}
                    </a>
                ))
            }
        </div>
    </nav>

    <script is:inline>
        const toggleElement = document.querySelector("[data-toggle-element]");
        toggleElement.addEventListener("click", () => {
            const target = document.querySelector(
                toggleElement.dataset.toggleElement,
            );
            if (!target) return;
            console.log({ target: target.dataset.open });
            const isOpen = target.dataset.open === "true";
            target.dataset.open = isOpen ? "false" : "true";
        });
    </script>
</header>
