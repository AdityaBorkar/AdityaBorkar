---
import Button from "@/components/ui/Button.astro";
import RefreshIcon from "@/assets/icons/Refresh.svg";

// Animate: top left to bottom right
// animate for 3 seconds continuously
// keep the button rotating and disable for 3 seconds
// fix rounded corners

// use svg so that morphing can be done.
---

<!-- CSS Paint API Polyfill -->
<script type="module" is:inline src="https://unpkg.com/css-paint-polyfill"
></script>

<div
    class:list={[
        "border-border/10 relative",
        "max-md:h-[25vh] max-md:border-b md:border-r",
    ]}
>
    <Button
        size="sm"
        variant="secondary"
        data-refresh-art
        class:list={["absolute bottom-2 right-2"]}
    >
        <RefreshIcon class="size-5 text-text-tertiary" />
    </Button>
    <div
        class="worklet-canvas bg-background"
        style="background-image: paint(bauhausPattern);"
    >
    </div>
</div>

<script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        if (CSS && CSS.paintWorklet) {
            CSS.paintWorklet.addModule("/css-worklet/bauhaus-pattern.js");
            document.documentElement.style.setProperty(
                "--pattern-seed",
                String(Math.floor(Math.random() * 10000)),
            );
        } else {
            console.warn("CSS Paint API is not supported in this browser");
        }
    });
</script>

<style>
    @property --pattern-seed {
        syntax: "<number>";
        initial-value: 1000;
        inherits: true;
    }

    @property --pattern-colors {
        syntax: "<color>#";
        initial-value: #2d58b5, #f43914, #f9c50e, #ffecdc;
        inherits: true;
    }

    @property --pattern-size {
        syntax: "<number>";
        initial-value: 1024;
        inherits: true;
    }

    @property --pattern-detail {
        syntax: "<number>";
        initial-value: 16;
        inherits: true;
    }
</style>
