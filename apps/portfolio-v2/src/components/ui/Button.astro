---
import type { VariantProps } from "class-variance-authority";
import { cva } from "class-variance-authority";

interface Props extends VariantProps<typeof buttonVariants> {
	type?: "button" | "submit" | "reset";
	classList?: string;
}

const { type = "button", classList, ...variantProps } = Astro.props;

export const buttonVariants = cva(
	"block w-fit rounded-lg font-semibold text-background transition-all duration-300 active:scale-80",
	{
		variants: {
			variant: {
				primary:
					"bg-text-secondary/90 text-bg-primary hover:bg-text-secondary hover:text-bg-secondary active:bg-text-primary",
				secondary:
					"border border-border/20 bg-background text-text-primary hover:bg-text-secondary hover:text-bg-secondary",
				hero: "!rounded-full mx-auto border-2 border-border bg-text-secondary px-6 py-3 text-bg-primary text-lg",
			},
			size: {
				lg: "px-6 py-3 text-base",
				md: "px-4 py-3 text-sm",
				sm: "px-2 py-2 text-xs",
			},
		},
	},
);
---

<button
	type={type}
	class:list={[buttonVariants({ ...variantProps }), classList]}
>
	<slot />
</button>
