---
import { SOCIALS } from "cms/constants";
import CalMeetButton from "@/components/CalMeetButton.astro";
import Button from "@/components/ui/Button.astro";
import Input from "@/components/ui/Input.astro";
import LandingLayout from "@/layouts/LandingLayout/index.astro";
import { SchemaMarkup } from "@/lib/utils";

const title = "Contact";
const description =
  "Reach out to collaborate on innovative projects, insightful podcasts, engaging talks, expert consultations, and exciting collaborations. Let's create something amazing together!";
const keywords = [
  "contact me",
  "collaborate with me",
  "project consultation",
  "business inquiries",
  "partnership opportunities",
  "freelance projects",
  "hire a developer",
];
const open_graph = {};
const schema_markup = [
  SchemaMarkup.get("contact"),
  SchemaMarkup.get("webpage/contact"),
];
const sustainability = {
  co2: 1,
  link: "/",
};
const seo = { title, keywords, description, open_graph, schema_markup };

// TODO - Add form loading state
// Drag and drop attach files, add a nice video, pdf, and image logo. Show a list of files attached with uploading animation. This must feel like ios
---

<LandingLayout {...seo} sustainability={sustainability}>
  <main
    class:list={[
      "bg-background", // ? FIX FOR BACKDROP BLUR
      "mx-auto py-24 md:mb-10 w-full max-w-[40rem] md:px-16 max-md:px-4 max-md:text-sm",
    ]}
  >
    <h2
      class:list={[
        "mb-4 font-bold text-transparent bg-clip-text bg-gradient-to-t from-text-primary to-text-secondary magic-fade-down delay-300",
        "text-4xl max-md:text-3xl",
      ]}
    >
      How can I help you?
    </h2>

    <p
      class="font-medium text-balance text-text-tertiary magic-fade-down delay-500"
    >
      I'm available for projects, consultations, and collaborations. Looking to
      start a new project or want a consult regarding your current project?
    </p>
    <p class="mt-2 font-medium text-text-tertiary magic-fade-down delay-500">
      I usually reply within 24 hours.
    </p>

    <form
      class="mt-8 grid grid-cols-2 gap-4 magic-fade-down delay-900"
      data-submitted=""
    >
      <Input
        name="full_name"
        label="Full Name"
        placeholder="Steve Jobs"
        wrapperClass="max-md:col-span-2"
      />
      <Input
        name="email"
        type="email"
        label="Contact Email"
        placeholder="harvey.specter@suits.com"
        wrapperClass="max-md:col-span-2"
      />
      <Input
        name="company_name"
        label="Name of Company"
        placeholder="Perplexity AI"
        wrapperClass="max-md:col-span-2"
      />
      <Input
        name="company_age"
        label="Age of Company"
        placeholder="Select"
        wrapperClass="max-md:col-span-2"
      />
      <div class="group relative col-span-2">
        <label for="details" class="mb-1 block font-medium text-text-primary">
          Tell me about your project:
        </label>
        <textarea
          id="details"
          name="details"
          placeholder="Feel free to write here..."
          class="peer block h-64 w-full rounded-xl bg-bg-primary px-4 py-2 border border-border/20 placeholder:text-text-tertiary/60 group-hover:pb-24"
        ></textarea>
        <!-- TODO: Handle responsiveness -->
        <div
          class:list={[
            "hidden magic-fade absolute top-6 -right-[calc(60%+0.5rem)] text-pretty w-[60%] rounded-md border border-border/20 text-text-secondary px-3 py-2 text-sm starting:opacity-0 ease-in-out duration-300",
            "md:group-focus:block md:peer-focus:block",
          ]}
        >
          Share your vision and ideas. Include any relevant links to references,
          prototypes, existing websites, or sources of inspiration. This will
          help me to understand your project better.
        </div>
      </div>
      <Input
        name="attachments"
        type="tel"
        label="Attach Files"
        placeholder="+91 9876543210"
        wrapperClass="max-md:col-span-2"
      />
    </form>

    <!-- Add Turnstile Captcha or Google Recaptcha -->

    <!-- TODO: Response collected successfully. Expect a reply within <span class="font-semibold underline underline-offset-4 decoration-dashed">three hours</span>. -->

    <div class="mt-4 col-span-2">
      <Button type="submit" variant="primary" size="md" class:list={["mx-auto"]}
        >Submit Inquiry</Button
      >
    </div>
  </main>

  <div>
    <p>
      Your message has been sent. Expect a reply within <span
        id="eta-text"
        class="font-semibold underline underline-offset-4 decoration-dashed"
      >
        twenty-four
      </span> hours.
    </p>
  </div>

  <div class="mt-16 text-text-tertiary magic-fade-down delay-1200">
    <div>
      <div class="mb-2">
        {"Prefer a more direct approach?  "}
        <CalMeetButton
          class="mx-0.5 font-medium hover:text-text-primary px-2 py-1"
          text="Schedule a call"
        />
        {"or"}
      </div>
      <a
        href={`mailto:${SOCIALS.email}`}
        class="mx-0.5 font-medium hover:text-text-primary border border-border/20 bg-bg-primary rounded-md px-2 py-1"
        >{SOCIALS.email}</a
      >
      <!-- <div class="mt-1"></div> -->
      <a
        href={SOCIALS.x}
        class="font-medium hover:text-text-primary border border-border/20 rounded-md px-2 py-1 bg-bg-primary mr-2"
      >
        Twitter
      </a>
      <a
        href={SOCIALS.linkedin}
        class="font-medium hover:text-text-primary border border-border/20 rounded-md px-2 py-1 bg-bg-primary"
      >
        LinkedIn
      </a>
    </div>
  </div>
</LandingLayout>

<script>
  import { actions } from "astro:actions";

  const button = document.querySelectorAll("button[type='submit']");
  button.forEach((button) => {
    button.addEventListener("click", async () => {
      button.disabled = true;
      button.textContent = "Sending..."; // TODO: Add a loading spinner

      const form = document.querySelector("form");
      if (!form) return;

      const formData = new FormData(form);
      const response = await actions.contactForm(formData);
      console.log(response);

      button.disabled = false;
      button.textContent = "Submit Inquiry";

      if (response.error) {
        const { fields } = response.error;
        const ids = Object.keys(fields);
        for (const id of ids) {
          const input = document.getElementById(id);
          const error_div = document.querySelector(`[for="${id}"] + p`);
          if (!input || !error_div) continue;
          const error = "Required"; // fields[id][0];
          input.setCustomValidity(error || "");
          error_div.textContent = error || "";
        }
        return;
      }

      form.setAttribute("data-submitted", "true");
      const etaText = document.getElementById("eta-text");
      if (etaText) etaText.textContent = response.data.eta;
    });
  });
</script>
