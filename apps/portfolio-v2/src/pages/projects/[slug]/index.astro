---
import { getCollection, render } from "astro:content";
import Image from "astro/components/Image.astro";
import BookCta from "@/components/sections/BookCta.astro";
import ButtonLink from "@/components/ui/ButtonLink.astro";
import Section from "@/components/ui/Section.astro";
import LandingLayout from "@/layouts/LandingLayout/index.astro";
import { getImage } from "@/lib/assets";
import { SchemaMarkup } from "@/lib/schema-markup";

export async function getStaticPaths() {
  const projects = await getCollection("projects");
  return projects.map((project) => ({
    params: { slug: project.id },
    props: { project },
  }));
}

const { project } = Astro.props;
if (!project) return Astro.redirect("/404");

const {
  title,
  tags,
  description,
  hero_image,
  links,
  categories,
  timeline,
  benefits,
} = project.data;
// console.log(project.rendered.metadata.headings);

const { Content } = await render(project);

const schema_markup = [
  SchemaMarkup.generate("webpage/page"),
  SchemaMarkup.get("software/mobile-app"),  SchemaMarkup.get("software/web-app"),
  SchemaMarkup.get("software/software-app"),
  SchemaMarkup.get("software/software-source-code"),
];
const open_graph = {};
const seo = { title, description, keywords: tags, schema_markup, open_graph };
const sustainability = {
  co2: 1,
  link: "",
};

export const prerender = true;
---

<LandingLayout {...seo} sustainability={sustainability}>
  <!-- Breadcrumb -->
  <div
    class:list={[
      "flex mx-auto max-w-[64rem] flex-row gap-2 text-sm mb-6 mt-12 text-text-tertiary",
      "max-md:px-4 md:mt-24",
    ]}
  >
    <a
      href="/projects"
      class="rounded-full bg-bg-primary/50 px-4 py-2 text-xs font-medium text-text-tertiary hover:bg-bg-primary"
    >
      <!-- <HiChevronRight
      className="inline-block size-3 stroke-1 align-[-1px]"
    /> -->
      View all Projects
    </a>
  </div>

  <Section
    class:list={[
      "grid border-b border-border/20 pb-16",
      "md:grid-cols-[auto_18rem] md:grid-rows-[1fr_auto] md:auto-rows-max md:gap-x-8",
    ]}
  >
    <div>
      <h1 class:list={["mb-4 text-left text-3xl font-bold", "md:text-5xl"]}>
        {title}
      </h1>

      <p class:list={["text-left text-sm text-text-tertiary", "md:text-base"]}>
        {description}
      </p>
    </div>
    <div></div>

    <div class="max-md:contents">
      <Image
        src={getImage(hero_image)}
        alt={title}
        class:list={[
          "mt-4 aspect-video rounded-xl border border-border/10 object-cover",
          "md:my-8",
        ]}
      />
      <div
        class:list={[
          "order-2 max-md:mt-8 prose min-w-full dark:prose-invert",
          "md:order-1",
        ]}
      >
        <Content />
      </div>
    </div>

    <div class="">
      <div
        class:list={[
          "mt-4 flex flex-col gap-4 text-text-tertiary font-normal",
          "md:sticky md:mt-8 md:top-[max(25vh,10rem)]",
        ]}
      >
        <div class="grid grid-cols-2 gap-4 text-center">
          {
            links.preview &&(
                <ButtonLink
                  target="_blank"
                  href={links.preview}
                  variant="secondary"
                  size="md"
                  class="w-full"
                >
                  <!-- class="rounded-md bg-bg-tertiary py-2 text-sm text-white transition-all duration-300 hover:bg-bg-secondary" -->
                  <!-- <LuGlobe className="inline-block size-4 stroke-2 align-[-3px]" /> -->
                  Live Preview
                </ButtonLink>)
          }

          {
            links.video && (
              <ButtonLink
                target="_blank"
                href={links.video}
                variant="secondary"
                size="md"
                class="w-full"
              >
                <!-- class="rounded-md bg-bg-tertiary px-4 py-2 text-sm text-white transition-all duration-300 hover:bg-bg-secondary" -->
                <!-- <LuEye className="inline-block size-4 stroke-2 align-[-3px]" /> -->
                Quick Peek
              </ButtonLink>
            )
          }
          {
            links.github && (
              <ButtonLink
                target="_blank"
                href={links.github}
                variant="secondary"
                size="md"
                class="w-full"
              >
                <!-- <LuGithub className="inline-block size-4 stroke-2 align-[-3px]" /> -->
                View Code
              </ButtonLink>
            )
          }
        </div>
        <div
          class="py-4 pb-4 text-sm font-medium px-4 rounded-xl border border-border/20"
        >
          <div
            class="grid grid-cols-[1fr_2fr] max-md:grid-cols-[1fr_2fr_1fr_2fr] gap-y-2 items-center text-base"
          >
            {benefits.map((benefit) => (
              <span
                class="text-2xl -mt-0.5 font-semibold text-center text-text-secondary"
              >
                {benefit.metric}
              </span>
              <div>{benefit.label}</div>
            ))}
          </div>
        </div>
        <div
          class="grid grid-cols-2 divide-x divide-border/20 *:p-4 rounded-xl border border-border/20"
        >
<div>
  <div class="text-sm font-medium">Timeline</div>
  <div class="mt-2 text-text-primary">{timeline}</div>
</div>
<div class="text-sm font-medium">
  <div>Year</div>
  <div class="mt-2 text-text-primary">2024</div>
</div>
        </div>
        <div
          class="p-4 rounded-xl border border-border/20"
        >
  <div class="text-sm text-text-tertiary">Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos. Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quos.</div>
  <div class="mt-2 text-text-primary">Aditya Borkar</div>
        </div>
      </div>
    </div>
  </Section>
  <BookCta />
</LandingLayout>
