---
import Footer from '@/components/labs/Footer.astro';
import { cn } from '@/lib/utils';
import Accordion from './Accordion.astro';

const [showOverlays, setShowOverlays] = [false, () => false];

// TODO - Auto width adjustment like webflow for better UX for resizing
// const [width, setWidth] = useState(0);
// useEffect(() => {
// 	setWidth(window.innerWidth);
// }, []);
---

<div
  class="mx-auto min-h-screen w-screen max-w-[96rem] px-16 bg-neutral-200 font-medium text-center"
>
  <header class="py-16">
    <input
      id="show-overlays"
      type="checkbox"
      defaultChecked={showOverlays}
      onChange={() => setShowOverlays(!showOverlays)}
    />
    <label htmlFor="show-overlays">Show Overlays</label>

    <div>
      Tip: You can use GAP or margins in between the grid according to your
      use-case
    </div>
  </header>

  {/* TABS */}
  <div class="grid grid-cols-[1fr_1fr_0.7fr] gap-48">
    <div class="flex flex-col gap-12">
      <Accordion
        open
        name="faqs-accordion"
        heading="Code vs No-Code?"
        anchorName="--anchor-faqs-accordion-1"
        class="bg-purple-200 border-purple-500"
      >
        <div class="min-h-36">
          No-code is the best excuse to not learn code.
        </div>
      </Accordion>
      <Accordion
        name="faqs-accordion"
        heading="Do you love free software (FOSS)?"
        anchorName="--anchor-faqs-accordion-2"
        class="bg-red-200 border-red-500"
      >
        <div class="min-h-24">
          Of course, I am broke and I want everyone to be like me.
        </div>
      </Accordion>
      <Accordion
        name="faqs-accordion"
        heading="What is your favorite color?"
        anchorName="--anchor-faqs-accordion-3"
        class="bg-pink-200 border-pink-500"
      >
        <div class="min-h-12">Rebecca Purple ðŸ’œ</div>
      </Accordion>
    </div>

    <div class="flex justify-center gap-16 items-center">
      <div
        class={cn(
          "border rounded-4xl min-h-48 w-full",
          "bg-yellow-100 border-yellow-500",
          "flex justify-center items-center",
        )}
        style={{
          anchorName: "--anchor-faqs-point",
          positionTryOptions: "flip-block",
        }}
      >
        POINT
        <br />
        <br />
        BOX
      </div>
    </div>

    <div class="flex justify-center items-center">
      <div
        style={{
          anchorName: "--anchor-faqs-aside",
        }}
        class={cn(
          "w-full mx-auto bg-green-100 border-green-500 border rounded-2xl min-h-96",
          "flex justify-center items-center",
        )}
      >
        ASIDE BOX
      </div>
    </div>
  </div>

  {/* CONNECTION LINES */}
  {/* TODO - BOX TOP-BOTTOM AUTO FIGURE OUT */}
  <div>
    <div
      class="absolute z-20 bg-green-500 min-h-2 -mt-1"
      style={{
        top: "min(anchor(--anchor-faqs-point center), anchor(--anchor-faqs-aside center))",
        right: "anchor(--anchor-faqs-aside left)",
        bottom: "anchor(--anchor-faqs-aside center)",
        left: "anchor(--anchor-faqs-point left)",
      }}
    >
    </div>
    <div
      class={cn("absolute z-20", showOverlays && "bg-purple-500/20")}
      style={{
        top: "anchor(--anchor-faqs-accordion-1 center)",
        right: "anchor(--anchor-faqs-point left)",
        bottom: "anchor(--anchor-faqs-point center)",
        left: "anchor(--anchor-faqs-accordion-1 right)",
      }}
    >
      <svg
        viewBox="0 0 100 100"
        preserveAspectRatio="none"
        class="w-full h-full mt-0.5"
      >
        <title>Line</title>
        <path
          d="M 0,2 L 40,2 L 80,98 L 100,98"
          class="stroke-purple-500"
          vectorEffect="non-scaling-stroke"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="4"
          fill="none"></path>
      </svg>
    </div>
    <div
      class={cn("absolute min-h-4 z-30", showOverlays && "bg-red-500/20")}
      style={{
        // top: 'min(anchor(--anchor-faqs-point center), anchor(--anchor-faqs-accordion-2 center))',
        top: "anchor(--anchor-faqs-point center)",
        right: "anchor(--anchor-faqs-point left)",
        bottom: "anchor(--anchor-faqs-accordion-2 center)",
        // bottom:
        // 	'max(anchor(--anchor-faqs-point center), anchor(--anchor-faqs-accordion-2 center))',
        left: "anchor(--anchor-faqs-accordion-2 right)",
      }}
    >
      <svg
        viewBox="0 0 100 100"
        preserveAspectRatio="none"
        class="w-full h-full -mt-0.5"
      >
        <title>Line</title>
        <path
          d="M 0,98 L 40,98 L 80,2 L 100,2"
          class="stroke-red-500"
          vectorEffect="non-scaling-stroke"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="4"
          fill="none"></path>
      </svg>
    </div>
    <div
      class={cn("absolute z-20", showOverlays && "bg-pink-500/20")}
      style={{
        top: "anchor(--anchor-faqs-point center)",
        right: "anchor(--anchor-faqs-point left)",
        bottom: "anchor(--anchor-faqs-accordion-3 center)",
        left: "anchor(--anchor-faqs-accordion-3 right)",
      }}
    >
      <svg
        viewBox="0 0 100 100"
        preserveAspectRatio="none"
        class="w-full h-full -mt-0.5"
      >
        <title>Line</title>
        <path
          d="M 0,98 L 40,98 L 80,2 L 100,2"
          class="stroke-pink-500"
          vectorEffect="non-scaling-stroke"
          strokeLinecap="round"
          strokeLinejoin="round"
          strokeWidth="4"
          fill="none"></path>
      </svg>
    </div>
  </div>

  <script type="module">
    if (!("anchorName" in document.documentElement.style))
      import("https://unpkg.com/@oddbird/css-anchor-positioning");
  </script>

  <Footer
    leftText="Zero-JS solution with anchor positioning. (Polyfill NOT TESTED)"
    rightText="Last updated 2025-01-03"
  />
</div>
